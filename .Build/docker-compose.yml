version: '2.3'
services:
  composer_install:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: "${HOST_UID}"
    volumes:
      - ${CORE_ROOT}:${CORE_ROOT}
    working_dir: ${CORE_ROOT}
    environment:
      COMPOSER_CACHE_DIR: ".Build/.cache/composer"
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        composer install --no-progress --no-interaction;
      "

  composer_require_package:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: "${HOST_UID}"
    volumes:
      - ${CORE_ROOT}:${CORE_ROOT}
    working_dir: ${CORE_ROOT}
    environment:
      COMPOSER_CACHE_DIR: ".Build/.cache/composer"
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        composer require -n -q ${COMPOSER_PARAMETER} ${PACKAGE};
      "

  composer_validate:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: "${HOST_UID}"
    volumes:
      - ${CORE_ROOT}:${CORE_ROOT}
    working_dir: ${CORE_ROOT}
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        composer validate;
      "

  redis4:
    image: redis:4-alpine

  memcached1-5:
    image: memcached:1.5-alpine

  prepare_functional_sqlite:
    image: alpine:3.8
    links:
      - redis4
      - memcached1-5
    command: >
      /bin/sh -c "
        sleep 1;
      "
  functional_sqlite:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: "${HOST_UID}"
    tmpfs:
      - ${CORE_ROOT}/.Build/Web/typo3temp/var/tests/functional-sqlite-dbs/:rw,noexec,nosuid,uid=${HOST_UID}
    volumes:
      - ${CORE_ROOT}:${CORE_ROOT}
    environment:
      typo3DatabaseDriver: pdo_sqlite
      typo3TestingRedisHost: redis4
      typo3TestingMemcachedHost: memcached1-5
    working_dir: ${CORE_ROOT}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP'
        COMMAND=\".Build/Web/vendor/phpunit/phpunit/phpunit --colors -c .Build/Web/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml ${EXTRA_TEST_OPTIONS} --exclude-group not-sqlite ${TEST_FILE}\"
        if [ ${PHP_XDEBUG_ON} -eq 0 ]; then
          XDEBUG_MODE=\"off\" $${COMMAND};
        else
          XDEBUG_MODE=\"debug,develop\" \
          XDEBUG_TRIGGER=\"foo\" \
          XDEBUG_CONFIG=\"client_port=${PHP_XDEBUG_PORT} client_host=host.docker.internal\" \
          $${COMMAND};
        fi
      "

  lint_php:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: "${HOST_UID}"
    volumes:
      - ${CORE_ROOT}:${CORE_ROOT}
    working_dir: ${CORE_ROOT}
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP'
        find Classes/ -name \\*.php -print0 | xargs -0 -n1 -P4 php -dxdebug.mode=off -l >/dev/null
      "
