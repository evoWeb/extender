name: build

on:
  push:
    branches: [ develop, main ]
    tags: [ '*' ]
  pull_request:
    branches: [ develop ]

jobs:
  lint:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        php-versions: ['7.4', '8.1']

    env: ${{ matrix }}

    name: Lint PHP ${{ php-versions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ php-versions }}

      - name: Running php lint with ${{ php-versions }}
        run: errors=$(find . -name \*.php ! -path "./.Build/*" -exec php -d display_errors=stderr -l "{}" 2>&1 >/dev/null \;) && echo "${errors}" && test -z "${errors}"

  functional:
    needs: lint

    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        env:
          - { PHP: 7.4, TYPO3_VERSION: ^11.0, TESTING_FRAMEWORK: ^6.6.2, TEST_PATH:  "Tests/Functional" }
          - { PHP: 8.1, TYPO3_VERSION: ^12.0, TESTING_FRAMEWORK: "dev-main", TEST_PATH:  "Tests/Functional12" }
          - { PHP: 8.1, TYPO3_VERSION: ^12.0, TESTING_FRAMEWORK: "dev-main", TEST_PATH:  "Tests/Functional12", PREFER_LOWEST: "--prefer-lowest" }
          - { PHP: 8.1, TYPO3_VERSION: "dev-main", TESTING_FRAMEWORK: "dev-main", TEST_PATH:  "Tests/Functional12" , experimental: true }

    env: ${{ matrix.env }}
    continue-on-error: ${{ experimental == true }}

    name: Run unit and/or functional tests on TYPO3 ${{ matrix.env.TYPO3_VERSION }} with PHP${{ matrix.env.php }} and testing framework ${{ matrix.env.TESTING_FRAMEWORK }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ PHP }}
          tools: composer
          extensions: pdo, sqlite3

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: dependencies-composer-${{ hashFiles('composer.json') }}

      - name: Ensure stability dev
        if: ${{ TYPO3_VERSION == 'dev-main' }}
        run: |
          composer config minimum-stability dev
          composer config prefer-stable true

      - name: Install TYPO3 core
        run: composer require typo3/cms-core="${TYPO3_VERSION}" ${PREFER_LOWEST};

      - name: Install testing framework ${TESTING_FRAMEWORK}
        if: ${{ TESTING_FRAMEWORK }}
        run: composer require --dev typo3/testing-framework="${TESTING_FRAMEWORK}";

      - name: Activate extensions
        run: |
          composer require --dev typo3/cms-extensionmanager="${TYPO3_VERSION}";
          cp -R .Build/Web/typo3conf/ext/extender/Tests/Functional/Fixtures/Extensions/base_extension .Build/Web/typo3conf/ext/
          cp -R .Build/Web/typo3conf/ext/extender/Tests/Functional/Fixtures/Extensions/extending_extension .Build/Web/typo3conf/ext/

      - name: Run functional tests
        run: |
          echo "Running ${TYPO3_VERSION} functional tests with $(which php)";
          export TYPO3_PATH_WEB=$PWD/.Build/Web;
          export typo3DatabaseDriver="pdo_sqlite";
          php .Build/Web/vendor/bin/phpunit --colors -c .Build/Web/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml ${TEST_PATH};

      - name: Reset composer.json
        run: git checkout composer.json;

  TERUpload:
    needs: [ lint, functional ]
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false

    name: TYPO3 TER release
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Publish to TER
        uses: tomasnorre/typo3-upload-ter@v2
        with:
          api-token: ${{ secrets.TYPO3_API_TOKEN }}
