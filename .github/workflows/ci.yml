name: build

on:
  push:
    branches: [ develop, main ]
    tags: [ '*' ]
  pull_request:
    branches: [ develop ]

jobs:

  resources:
    name: Resources tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Test documentation build
        run: Build/Scripts/additionalTests.sh -s buildDocumentation

      - name: Cleanup
        run: |
          Build/Scripts/runTests.sh -s clean ; \
          Build/Scripts/additionalTests.sh -s clean ; \
          git checkout composer.json

  testsuite:
    name: All php tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        packages:
          - php: '7.4'
            core: '^11.5'
            framework: '^6.16.9'
            path: 'Tests/Functional'
            prefer: ''
          - php: '7.4'
            core: '^11.5'
            framework: '^6.16.9'
            path: 'Tests/Functional'
            prefer: '--prefer-lowest'
          - php: '8.2'
            core: '^11.5'
            framework: '^6.16.9'
            path: 'Tests/Functional'
            prefer: ''
          - php: '8.2'
            core: '^11.5'
            framework: '^6.16.9'
            path: 'Tests/Functional'
            prefer: '--prefer-lowest'

          - php: '8.1'
            core: '^12.4'
            framework: '^8.0.6'
            path: 'Tests/Functional12'
            prefer: ''
          - php: '8.1'
            core: '^12.4'
            framework: '^8.0.6'
            path: 'Tests/Functional12'
            prefer: '--prefer-lowest'
          - php: '8.2'
            core: '^12.4'
            framework: '^8.0.6'
            path: 'Tests/Functional12'
            prefer: ''
          - php: '8.2'
            core: '^12.4'
            framework: '^8.0.6'
            path: 'Tests/Functional12'
            prefer: '--prefer-lowest'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: PHP lint
        run: |
          Build/Scripts/additionalTests.sh \
            -p ${{ matrix.packages.php }} \
            -s lintPhp

      - name: Composer install
        run: |
          Build/Scripts/runTests.sh \
            -p ${{ matrix.packages.php }} \
            -s composerInstall

      - name: Composer install core
        run: |
          Build/Scripts/additionalTests.sh \
            -p ${{ matrix.packages.php }} \
            -s composerInstallPackage \
            -q "typo3/cms-core:${{ matrix.packages.core }}" \
            -r " ${PREFER_LOWEST}"

      - name: Composer install framework
        run: |
          Build/Scripts/additionalTests.sh \
            -p ${{ matrix.packages.php }} \
            -s composerInstallPackage \
            -q "typo3/testing-framework:${{ matrix.packages.framework }}" \
            -r " --dev ${{ matrix.packages.prefer }}"

      - name: Composer validate
        run: |
          Build/Scripts/runTests.sh \
            -p ${{ matrix.packages.php }} \
            -s composerValidate

      - name: Functional tests with sqlite
        run: |
          Build/Scripts/runTests.sh \
            -p ${{ matrix.packages.php }} \
            -d sqlite \
            -s functional ${{ matrix.packages.path }}

      - name: Cleanup
        run: |
          Build/Scripts/runTests.sh -s clean
          Build/Scripts/additionalTests.sh -s clean
          git checkout composer.json

  TERUpload:
    needs: [ resources, testsuite ]
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-22.04

    name: TYPO3 TER release
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Publish to TER
        uses: tomasnorre/typo3-upload-ter@v2
        with:
          api-token: ${{ secrets.TYPO3_API_TOKEN }}
